// -*- C++ -*- generated by wxGlade 0.6.3 on Wed Jun 30 10:34:37 2010

#include "coreWorkflowEditorWidgetUI.h"

// begin wxGlade: ::extracode

// end wxGlade


coreWorkflowEditorWidgetUI::coreWorkflowEditorWidgetUI(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxCAPTION|wxRESIZE_BORDER|wxSYSTEM_MENU|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: coreWorkflowEditorWidgetUI::coreWorkflowEditorWidgetUI
    sizer_4_staticbox = new wxStaticBox(this, -1, wxT("Workflow"));
    sizer_3_staticbox = new wxStaticBox(this, -1, wxT("Registered Windows"));
    m_TreeRegisteredWindows = new Core::Widgets::TreeRegisteredWindows(this, wxID_TREE_REGISTERED_WINDOWS, wxDefaultPosition, wxDefaultSize, wxTR_HAS_BUTTONS|wxTR_LINES_AT_ROOT|wxTR_DEFAULT_STYLE|wxSUNKEN_BORDER);
    m_TreeWorkflow = new Core::Widgets::TreeWorkflow(this, wxID_TREE_WORKFLOW, wxDefaultPosition, wxDefaultSize, wxTR_HAS_BUTTONS|wxTR_LINES_AT_ROOT|wxTR_DEFAULT_STYLE|wxSUNKEN_BORDER);
    label_1 = new wxStaticText(this, wxID_ANY, wxT("Quick Help: \n  - Right mouse button on right root node to add a workflow step. \n  - Drag and Drop from left to right to add processing steps or windows. \n  - Drag and Drop from right to out of this window to remove components.\n"));
    m_btnOk = new wxButton(this, wxID_OK, wxT("Ok"));
    m_btnCancel = new wxButton(this, wxID_CANCEL, wxT("Cancel"));

    set_properties();
    do_layout();
    // end wxGlade
}


BEGIN_EVENT_TABLE(coreWorkflowEditorWidgetUI, wxDialog)
    // begin wxGlade: coreWorkflowEditorWidgetUI::event_table
    EVT_BUTTON(wxID_OK, coreWorkflowEditorWidgetUI::OnOk)
    EVT_BUTTON(wxID_CANCEL, coreWorkflowEditorWidgetUI::OnCancel)
    // end wxGlade
END_EVENT_TABLE();


void coreWorkflowEditorWidgetUI::OnOk(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (coreWorkflowEditorWidgetUI::OnOk) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void coreWorkflowEditorWidgetUI::OnCancel(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (coreWorkflowEditorWidgetUI::OnCancel) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


// wxGlade: add coreWorkflowEditorWidgetUI event handlers


void coreWorkflowEditorWidgetUI::set_properties()
{
    // begin wxGlade: coreWorkflowEditorWidgetUI::set_properties
    SetTitle(wxT("Workflow Editor"));
    SetSize(wxSize(694, 518));
    m_btnOk->SetFocus();
    // end wxGlade
}


void coreWorkflowEditorWidgetUI::do_layout()
{
    // begin wxGlade: coreWorkflowEditorWidgetUI::do_layout
    wxBoxSizer* sizer_1 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_5 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_2 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_4 = new wxStaticBoxSizer(sizer_4_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_3 = new wxStaticBoxSizer(sizer_3_staticbox, wxVERTICAL);
    sizer_3->Add(m_TreeRegisteredWindows, 1, wxEXPAND, 0);
    sizer_2->Add(sizer_3, 1, wxEXPAND, 0);
    sizer_2->Add(20, 20, 0, 0, 0);
    sizer_4->Add(m_TreeWorkflow, 1, wxEXPAND, 0);
    sizer_2->Add(sizer_4, 1, wxEXPAND, 0);
    sizer_1->Add(sizer_2, 1, wxALL|wxEXPAND, 5);
    sizer_1->Add(label_1, 0, wxALL|wxEXPAND, 5);
    sizer_5->Add(m_btnOk, 0, wxALL|wxALIGN_RIGHT, 5);
    sizer_5->Add(m_btnCancel, 0, wxALL|wxALIGN_RIGHT, 5);
    sizer_1->Add(sizer_5, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_1);
    Layout();
    // end wxGlade
}

