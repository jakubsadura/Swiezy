/*
* Copyright (c) 2009,
* Computational Image and Simulation Technologies in Biomedicine (CISTIB),
* Universitat Pompeu Fabra (UPF), Barcelona, Spain. All rights reserved.
* See license.txt file for details.
*/

// -*- C++ -*- generated by wxGlade 0.6.3 on Tue Nov 04 12:55:39 2008

#include "coreMovieToolbarUI.h"

// begin wxGlade: ::extracode
// end wxGlade

#include "coreKernel.h"
#include "wxID.h"
#include <wxUnicode.h>

#define wxID_MovieSlider		wxID("SliderScrolled")
#define wxID_PlayButton			wxID("PlayButton")
#define wxID_StopButton			wxID("StopButton")
#define wxID_PauseButton		wxID("PauseButton")
#define wxID_FrameRateSlider	wxID("FrameRateEditBox")
#define wxID_MovieToolbarTimer	wxID("MovieToolbarTimer")

Core::Widgets::MovieToolbarUI::MovieToolbarUI(wxWindow* parent, int id, const wxPoint& pos, const wxSize& size, long style):
    wxPanel(parent, id, pos, size, wxRAISED_BORDER|wxTAB_TRAVERSAL)
{
	frameRateSizer_staticbox = new wxStaticBox(this, -1, wxT("Frame Rate"));
	buttonSizer_staticbox = new wxStaticBox(this, -1, wxT("Movie"));
    sizer_2_staticbox = new wxStaticBox(this, -1, wxT("Frame"));

    // begin wxGlade: MovieToolbarUI::MovieToolbarUI
	playButton = new wxBitmapButton(this, wxID_PlayButton, wxBitmap(_U(Core::Runtime::Kernel::GetApplicationSettings()->GetApplicationPathSubPath("resource/Play.bmp")), wxBITMAP_TYPE_ANY));
	stopButton = new wxBitmapButton(this, wxID_StopButton, wxBitmap(_U(Core::Runtime::Kernel::GetApplicationSettings()->GetApplicationPathSubPath("resource/Stop.bmp")), wxBITMAP_TYPE_ANY));
	pauseButton = new wxBitmapButton(this, wxID_PauseButton, wxBitmap(_U(Core::Runtime::Kernel::GetApplicationSettings()->GetApplicationPathSubPath("resource/Pause.bmp")), wxBITMAP_TYPE_ANY));
	movieSlider = new wxSlider(this, wxID_MovieSlider, 0, 0, 0);
	frameRateSlider = new wxSlider(this, wxID_FrameRateSlider, 500, 1, 2000, wxDefaultPosition, wxDefaultSize, wxSL_HORIZONTAL | wxSL_INVERSE );
    text_ctrl_FrameNr = new wxTextCtrl(this, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize,wxTE_READONLY);

	set_properties();
    do_layout();
    // end wxGlade
}


BEGIN_EVENT_TABLE(Core::Widgets::MovieToolbarUI, wxPanel)
    // begin wxGlade: MovieToolbarUI::event_table
    EVT_BUTTON				(wxID_PlayButton, Core::Widgets::MovieToolbarUI::OnPlayButton)
    EVT_BUTTON				(wxID_StopButton, Core::Widgets::MovieToolbarUI::OnStopButton)
    EVT_BUTTON				(wxID_PauseButton, Core::Widgets::MovieToolbarUI::OnPauseButton)
    EVT_COMMAND_SCROLL		(wxID_MovieSlider, Core::Widgets::MovieToolbarUI::OnMovieSlider)
	EVT_COMMAND_SCROLL		(wxID_FrameRateSlider, Core::Widgets::MovieToolbarUI::OnFrameRateSlider)
    // end wxGlade
END_EVENT_TABLE();


void Core::Widgets::MovieToolbarUI::OnPlayButton(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (MovieToolbarUI::OnPlayButton) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void Core::Widgets::MovieToolbarUI::OnStopButton(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (MovieToolbarUI::OnStopButton) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void Core::Widgets::MovieToolbarUI::OnPauseButton(wxCommandEvent &event)
{   
	event.Skip();
	wxLogDebug(wxT("Event handler (MovieToolbarUI::OnPauseButton) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void Core::Widgets::MovieToolbarUI::OnMovieSlider(wxScrollEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (MovieToolbarUI::OnMovieSlider) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void Core::Widgets::MovieToolbarUI::OnFrameRateSlider(wxScrollEvent &event)
{
	event.Skip();
	wxLogDebug(wxT("Event handler (MovieToolbarUI::OnFrameRateSlider) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}

// wxGlade: add MovieToolbarUI event handlers


void Core::Widgets::MovieToolbarUI::set_properties()
{
    // begin wxGlade: MovieToolbarUI::set_properties
    playButton->SetSize(playButton->GetBestSize());
    stopButton->SetSize(stopButton->GetBestSize());
    pauseButton->SetSize(pauseButton->GetBestSize());
    movieSlider->SetBackgroundColour(wxColour(236, 233, 216));
    // end wxGlade
}


void Core::Widgets::MovieToolbarUI::do_layout()
{
    // begin wxGlade: MovieToolbarUI::do_layout
    wxBoxSizer* sizer_1 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_2 = new wxStaticBoxSizer(sizer_2_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* frameRateSizer = new wxStaticBoxSizer(frameRateSizer_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* buttonSizer = new wxStaticBoxSizer(buttonSizer_staticbox, wxHORIZONTAL);
    buttonSizer->Add(playButton, 0, 0, 0);
    buttonSizer->Add(stopButton, 0, 0, 0);
    buttonSizer->Add(pauseButton, 0, 0, 0);
    buttonSizer->Add(movieSlider, 1, 0, 0);
    sizer_1->Add(buttonSizer, 1, 0, 0);
    frameRateSizer->Add(frameRateSlider, 1, 0, 0);
    sizer_1->Add(frameRateSizer, 0, 0, 0);
    sizer_2->Add(text_ctrl_FrameNr, 1, 0, 0);
    sizer_1->Add(sizer_2, 0, 0, 0);
    SetSizer(sizer_1);
    sizer_1->Fit(this);
    // end wxGlade
}

bool Core::Widgets::MovieToolbarUI::Enable(bool enable)
{
	playButton->Enable(enable);
	stopButton->Enable(enable);
	pauseButton->Enable(enable);
	movieSlider->Enable(enable);
	frameRateSlider->Enable(enable);
	text_ctrl_FrameNr->Enable(enable);
	return true;
}
