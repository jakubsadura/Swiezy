// Copyright 2009 Pompeu Fabra University (Computational Imaging Laboratory), Barcelona, Spain. Web: www.cilab.upf.edu.
// This software is distributed WITHOUT ANY WARRANTY; 
// without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
// -*- C++ -*- generated by wxGlade 0.6.3 on Thu Jan 14 17:39:16 2010

#include "ptChangeOrientationWidget.h"
#include "coreDirectory.h"
#include "coreSettings.h"

// begin wxGlade: ::extracode

// end wxGlade

BEGIN_EVENT_TABLE(ptChangeOrientationWidget, wxPanel)
    // begin wxGlade: ptChangeOrientationWidget::event_table
    EVT_BUTTON(wxID_BTN_INVERT_SLICE_ORDER, ptChangeOrientationWidget::OnInvertSliceOrder)
    EVT_BUTTON(wxID_BTN_FLIP_UP_DOWN, ptChangeOrientationWidget::OnFlipUpDown)
    EVT_BUTTON(wxID_BTN_FLIP_LEFT_RIGHT, ptChangeOrientationWidget::OnFlipLeftRight)
    // end wxGlade
END_EVENT_TABLE();

ptChangeOrientationWidget::ptChangeOrientationWidget(
	wxWindow* parent, int id, const wxPoint& pos, const wxSize& size, long style)
		: wxPanel(parent, id, pos, size, wxTAB_TRAVERSAL)
{
    // begin wxGlade: ptChangeOrientationWidget::ptChangeOrientationWidget
    m_btnInvertSliceOrder = new wxButton(this, wxID_BTN_INVERT_SLICE_ORDER, wxT("Invert slice order"));
    m_btnFlipUp_Down = new wxButton(this, wxID_BTN_FLIP_UP_DOWN, wxT("Flip Up/Down"));
    m_btnFlipLeft_Right = new wxButton(this, wxID_BTN_FLIP_LEFT_RIGHT, wxT("Flip Left/Right"));
	

	std::string filepath = Core::Runtime::Kernel::GetApplicationSettings()->GetResourcePath() 
		+ Core::IO::SlashChar + "HeadOrientation.jpg";
	m_bmpHeadOrientation = new wxStaticBitmap(this, wxID_ANY, wxBitmap(wxT(filepath), wxBITMAP_TYPE_ANY));

    set_properties();
    do_layout();
    // end wxGlade

	m_Processor = Core::ChangeOrientationProcessor::New();
}


void ptChangeOrientationWidget::set_properties()
{
    // begin wxGlade: ptChangeOrientationWidget::set_properties
    // end wxGlade
}


void ptChangeOrientationWidget::do_layout()
{
    // begin wxGlade: ptChangeOrientationWidget::do_layout
    wxBoxSizer* GlobalSizer = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_1 = new wxBoxSizer(wxHORIZONTAL);
    sizer_1->Add(m_btnInvertSliceOrder, 0, 0, 0);
    sizer_1->Add(m_btnFlipUp_Down, 0, 0, 0);
    sizer_1->Add(m_btnFlipLeft_Right, 0, 0, 0);
    GlobalSizer->Add(sizer_1, 0, wxEXPAND, 0);
	GlobalSizer->Add(m_bmpHeadOrientation, 0, wxALL|wxALIGN_CENTER_HORIZONTAL, 5);
    SetSizer(GlobalSizer);
    GlobalSizer->Fit(this);
    // end wxGlade
}


void ptChangeOrientationWidget::OnInvertSliceOrder(wxCommandEvent &event)
{
	m_Processor->SetInvertSliceOrder( true );
	m_Processor->SetFlipUpDown( false );
	m_Processor->SetFlipLeftRight( false );
	m_Processor->Update( );
}


void ptChangeOrientationWidget::OnFlipUpDown(wxCommandEvent &event)
{
	m_Processor->SetInvertSliceOrder( false );
	m_Processor->SetFlipUpDown( true );
	m_Processor->SetFlipLeftRight( false );
	m_Processor->Update( );
}


void ptChangeOrientationWidget::OnFlipLeftRight(wxCommandEvent &event)
{
	m_Processor->SetInvertSliceOrder( false );
	m_Processor->SetFlipUpDown( false );
	m_Processor->SetFlipLeftRight( true );
	m_Processor->Update( );
}

Core::BaseProcessor::Pointer ptChangeOrientationWidget::GetProcessor()
{
	return m_Processor.GetPointer();
}
