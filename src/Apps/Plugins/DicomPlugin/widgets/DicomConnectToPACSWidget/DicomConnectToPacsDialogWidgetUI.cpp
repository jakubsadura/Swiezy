// -*- C++ -*- generated by wxGlade 0.6.3 on Tue Jun 29 11:40:30 2010

#include "DicomConnectToPacsDialogWidgetUI.h"

// begin wxGlade: ::extracode

// end wxGlade


DicomConnectToPacsDialogWidgetUI::DicomConnectToPacsDialogWidgetUI(wxWindow* parent, int id, const wxPoint& pos, const wxSize& size, long style):
    wxScrolledWindow(parent, id, pos, size, style)
{
    // begin wxGlade: DicomConnectToPacsDialogWidgetUI::DicomConnectToPacsDialogWidgetUI
    notebook = new wxNotebook(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0);
    notebook_pane_ConnectionParams = new wxPanel(notebook, wxID_ANY);
    notebook_pane_SendToPacs = new wxPanel(notebook, wxID_ANY);
    notebook_pane_QueryRetrieve = new wxPanel(notebook, wxID_ANY);
    sizer_8_staticbox = new wxStaticBox(notebook_pane_SendToPacs, -1, wxT("Sends current data to PACS"));
    sizer_6_copy_staticbox = new wxStaticBox(notebook_pane_ConnectionParams, -1, wxT("Connection Parameters"));
    sizer_2_staticbox = new wxStaticBox(this, -1, wxEmptyString);
    sizer_5_staticbox = new wxStaticBox(notebook_pane_QueryRetrieve, -1, wxT("Query"));
    label_1 = new wxStaticText(notebook_pane_QueryRetrieve, wxID_ANY, wxT("Patient name:"));
    m_edPatientName = new wxTextCtrl(notebook_pane_QueryRetrieve, wxID_DICOM_PATIENT_NAME, wxEmptyString, wxDefaultPosition, wxDefaultSize, wxTE_PROCESS_ENTER);
    label_PatientID = new wxStaticText(notebook_pane_QueryRetrieve, wxID_ANY, wxT("Patient ID:"));
    m_edPatientID = new wxTextCtrl(notebook_pane_QueryRetrieve, wxID_DICOM_PATIENT_ID, wxEmptyString);
    m_chkDateOfBirth = new wxCheckBox(notebook_pane_QueryRetrieve, wxID_DICOM_PATIENT_DATE_OF_BIRTH, wxT("Date of birth"));
    m_chkDateOfBirthFrom = new wxCheckBox(notebook_pane_QueryRetrieve, wxID_DICOM_PATIENT_DATE_OF_BIRTH_FROM, wxT("From"));
    m_chkDateOfBirthTo = new wxCheckBox(notebook_pane_QueryRetrieve, wxID_DICOM_PATIENT_DATE_OF_BIRTH_TO, wxT("To"));
    m_dateBirth = new wxDatePickerCtrl(notebook_pane_QueryRetrieve, wxID_DICOM_PATIENT_BIRTH_DATE);
    m_dateBirth_From = new wxDatePickerCtrl(notebook_pane_QueryRetrieve, wxID_DICOM_PATIENT_BIRTH_FROM);
    m_dateBirth_To = new wxDatePickerCtrl(notebook_pane_QueryRetrieve, wxID_DICOM_PATIENT_BIRTH_TO);
    label_StudyId = new wxStaticText(notebook_pane_QueryRetrieve, wxID_ANY, wxT("Study Id:"));
    m_edStudyId = new wxTextCtrl(notebook_pane_QueryRetrieve, wxID_DICOM_STUDY_ID, wxEmptyString, wxDefaultPosition, wxDefaultSize, wxTE_PROCESS_ENTER);
    label_Modality = new wxStaticText(notebook_pane_QueryRetrieve, wxID_ANY, wxT("Modality:"));
    m_edModality = new wxTextCtrl(notebook_pane_QueryRetrieve, wxID_DICOM_MODALITY, wxEmptyString, wxDefaultPosition, wxDefaultSize, wxTE_PROCESS_ENTER);
    label_2 = new wxStaticText(notebook_pane_QueryRetrieve, wxID_ANY, wxT("Save to directory:"));
    m_edSaveToDirectory = new wxTextCtrl(notebook_pane_QueryRetrieve, wxID_ANY, wxEmptyString);
    m_btnOpenDirectoryForSavingPacsData = new wxButton(notebook_pane_QueryRetrieve, wxID_DICOM_OPEN_DIRECTORY_FOR_SAVING_PACS_DATA, wxT("..."));
    m_btnQuery = new wxButton(notebook_pane_QueryRetrieve, wxID_DICOM_QUERY, wxT("Query"));
    m_btnRetrieve = new wxButton(notebook_pane_QueryRetrieve, wxID_DICOM_RETRIEVE, wxT("Retrieve"));
    m_DICOMTree = new DicomPlugin::DICOMTree(notebook_pane_QueryRetrieve, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTR_HAS_BUTTONS|wxTR_LINES_AT_ROOT|wxTR_DEFAULT_STYLE|wxSUNKEN_BORDER);
    label_SendToPacs = new wxStaticText(notebook_pane_SendToPacs, wxID_ANY, wxT("Press the send to pacs button and select one or more DICOM files from your harddisk. These files will be sent to the PACS."));
    m_btnSendToPacs = new wxButton(notebook_pane_SendToPacs, wxID_DICOM_SEND, wxT("Send To PACS"));
    label_Calling_AE = new wxStaticText(notebook_pane_ConnectionParams, wxID_ANY, wxT("Calling AE Title:"));
    m_edPACSCallingAETitle = new wxTextCtrl(notebook_pane_ConnectionParams, wxID_ANY, wxT("myFINDMOVESCU"));
    label_CallerAE = new wxStaticText(notebook_pane_ConnectionParams, wxID_ANY, wxT("Called AE Title:"));
    m_edPACSCalledAETitle = new wxTextCtrl(notebook_pane_ConnectionParams, wxID_ANY, wxT("ANYSCP"));
    label_CallingAEIPAddress = new wxStaticText(notebook_pane_ConnectionParams, wxID_ANY, wxT("Calling AE IP Address:"));
    m_edPACSCallingAEIP = new wxTextCtrl(notebook_pane_ConnectionParams, wxID_ANY, wxT("10.80.6.5"));
    label_CalledAEIPAddress = new wxStaticText(notebook_pane_ConnectionParams, wxID_ANY, wxT("Called AE IP Address:"));
    m_edPACSCalledAEIP = new wxTextCtrl(notebook_pane_ConnectionParams, wxID_ANY, wxT("10.80.4.143"));
    label_CallingPortNumber_copy = new wxStaticText(notebook_pane_ConnectionParams, wxID_ANY, wxT("Calling AE Port number (Retrieve):"));
    m_edPACSCallingAEPortRetrieve = new wxTextCtrl(notebook_pane_ConnectionParams, wxID_ANY, wxT("1235"));
    label_CallingPortNumber = new wxStaticText(notebook_pane_ConnectionParams, wxID_ANY, wxT("Calling AE Port number (Send):"));
    m_edPACSCallingAEPortSend = new wxTextCtrl(notebook_pane_ConnectionParams, wxID_ANY, wxT("1235"));
    label_CalledPortNumber = new wxStaticText(notebook_pane_ConnectionParams, wxID_ANY, wxT("Called AE Port number:"));
    m_edPACSCalledAEPort = new wxTextCtrl(notebook_pane_ConnectionParams, wxID_ANY, wxT("1234"));
    m_btnSaveConfig = new wxButton(notebook_pane_ConnectionParams, wxID_DICOM_SAVECONFIG, wxT("Save Connection Parameters"));

    set_properties();
    do_layout();
    // end wxGlade
}


void DicomConnectToPacsDialogWidgetUI::set_properties()
{
    // begin wxGlade: DicomConnectToPacsDialogWidgetUI::set_properties
    SetSize(wxSize(668, 602));
    SetScrollRate(10, 10);
    m_edPatientName->SetFocus();
    m_chkDateOfBirth->Enable(false);
    m_chkDateOfBirthFrom->Enable(false);
    m_chkDateOfBirthTo->Enable(false);
    m_edStudyId->SetFocus();
    m_edModality->SetFocus();
    m_btnOpenDirectoryForSavingPacsData->SetMinSize(wxSize(23, 23));
    // end wxGlade
}


void DicomConnectToPacsDialogWidgetUI::do_layout()
{
    // begin wxGlade: DicomConnectToPacsDialogWidgetUI::do_layout
    wxStaticBoxSizer* sizer_2 = new wxStaticBoxSizer(sizer_2_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_10 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_6_copy = new wxStaticBoxSizer(sizer_6_copy_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_13 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_12 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_11 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_3_copy_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_3_copy_copy_1_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_3_copy_copy_3 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_3_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_3_copy_copy_2 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_3_copy_copy_1_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_8 = new wxStaticBoxSizer(sizer_8_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_9 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_1_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_7 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_4 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_1 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_5 = new wxStaticBoxSizer(sizer_5_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_14 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_6 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_3_copy_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_3_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_3_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_3 = new wxBoxSizer(wxHORIZONTAL);
    sizer_3->Add(label_1, 1, wxALL|wxEXPAND, 5);
    sizer_3->Add(m_edPatientName, 1, wxALL|wxEXPAND, 0);
    sizer_5->Add(sizer_3, 0, wxEXPAND, 0);
    sizer_3_copy_copy->Add(label_PatientID, 1, wxALL|wxEXPAND, 5);
    sizer_3_copy_copy->Add(m_edPatientID, 1, wxALL|wxEXPAND, 0);
    sizer_5->Add(sizer_3_copy_copy, 0, wxEXPAND, 5);
    sizer_3_copy_copy_copy->Add(m_chkDateOfBirth, 1, wxALL|wxEXPAND, 5);
    sizer_3_copy_copy_copy->Add(m_chkDateOfBirthFrom, 1, wxALL|wxEXPAND, 5);
    sizer_3_copy_copy_copy->Add(m_chkDateOfBirthTo, 1, wxALL|wxEXPAND, 5);
    sizer_5->Add(sizer_3_copy_copy_copy, 1, wxEXPAND, 5);
    sizer_3_copy_copy_copy_copy->Add(m_dateBirth, 0, wxALL, 5);
    sizer_3_copy_copy_copy_copy->Add(14, 12, 1, wxALL|wxEXPAND, 5);
    sizer_3_copy_copy_copy_copy->Add(m_dateBirth_From, 0, wxALL, 5);
    sizer_3_copy_copy_copy_copy->Add(20, 20, 1, wxALL|wxEXPAND, 5);
    sizer_3_copy_copy_copy_copy->Add(m_dateBirth_To, 0, wxALL|wxFIXED_MINSIZE, 5);
    sizer_3_copy_copy_copy_copy->Add(20, 20, 1, wxALL|wxEXPAND, 5);
    sizer_5->Add(sizer_3_copy_copy_copy_copy, 1, wxEXPAND, 5);
    sizer_6->Add(label_StudyId, 1, wxALL|wxEXPAND, 5);
    sizer_6->Add(m_edStudyId, 1, wxALL|wxEXPAND, 0);
    sizer_5->Add(sizer_6, 0, wxEXPAND, 5);
    sizer_14->Add(label_Modality, 1, wxALL|wxEXPAND, 5);
    sizer_14->Add(m_edModality, 1, wxALL|wxEXPAND, 0);
    sizer_5->Add(sizer_14, 0, wxEXPAND, 5);
    sizer_7->Add(sizer_5, 0, wxEXPAND, 0);
    sizer_1->Add(label_2, 0, wxALL, 5);
    sizer_1->Add(m_edSaveToDirectory, 1, wxALL, 0);
    sizer_1->Add(m_btnOpenDirectoryForSavingPacsData, 0, wxALL, 0);
    sizer_7->Add(sizer_1, 0, wxEXPAND, 5);
    sizer_4->Add(20, 20, 1, wxEXPAND, 0);
    sizer_4->Add(m_btnQuery, 0, wxALL|wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 5);
    sizer_4->Add(m_btnRetrieve, 0, wxALL|wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 5);
    sizer_7->Add(sizer_4, 0, wxEXPAND, 0);
    sizer_7->Add(m_DICOMTree, 1, wxEXPAND, 0);
    notebook_pane_QueryRetrieve->SetSizer(sizer_7);
    sizer_1_copy->Add(label_SendToPacs, 1, wxALL|wxEXPAND, 5);
    sizer_9->Add(sizer_1_copy, 0, wxEXPAND, 5);
    sizer_9->Add(m_btnSendToPacs, 0, 0, 0);
    sizer_8->Add(sizer_9, 1, wxEXPAND, 0);
    notebook_pane_SendToPacs->SetSizer(sizer_8);
    sizer_3_copy_copy_1_copy->Add(label_Calling_AE, 1, wxALL|wxEXPAND, 5);
    sizer_3_copy_copy_1_copy->Add(m_edPACSCallingAETitle, 0, wxALL|wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 0);
    sizer_3_copy_copy_1_copy->Add(300, 20, 0, 0, 0);
    sizer_6_copy->Add(sizer_3_copy_copy_1_copy, 0, wxEXPAND, 5);
    sizer_3_copy_copy_2->Add(label_CallerAE, 1, wxALL|wxEXPAND, 5);
    sizer_3_copy_copy_2->Add(m_edPACSCalledAETitle, 0, wxALL|wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 0);
    sizer_3_copy_copy_2->Add(300, 20, 0, 0, 0);
    sizer_6_copy->Add(sizer_3_copy_copy_2, 1, wxEXPAND, 5);
    sizer_3_copy->Add(label_CallingAEIPAddress, 1, wxALL|wxEXPAND, 5);
    sizer_3_copy->Add(m_edPACSCallingAEIP, 0, wxALL|wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 0);
    sizer_3_copy->Add(300, 20, 0, 0, 0);
    sizer_6_copy->Add(sizer_3_copy, 0, wxEXPAND, 5);
    sizer_3_copy_copy_3->Add(label_CalledAEIPAddress, 1, wxALL|wxEXPAND, 5);
    sizer_3_copy_copy_3->Add(m_edPACSCalledAEIP, 0, wxALL|wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 0);
    sizer_3_copy_copy_3->Add(300, 20, 0, 0, 0);
    sizer_6_copy->Add(sizer_3_copy_copy_3, 0, wxEXPAND, 5);
    sizer_3_copy_copy_1_copy_1->Add(label_CallingPortNumber_copy, 1, wxALL|wxEXPAND, 5);
    sizer_3_copy_copy_1_copy_1->Add(m_edPACSCallingAEPortRetrieve, 0, wxALL|wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 0);
    sizer_3_copy_copy_1_copy_1->Add(300, 20, 0, 0, 0);
    sizer_6_copy->Add(sizer_3_copy_copy_1_copy_1, 0, wxEXPAND, 5);
    sizer_3_copy_copy_1->Add(label_CallingPortNumber, 1, wxALL|wxEXPAND, 5);
    sizer_3_copy_copy_1->Add(m_edPACSCallingAEPortSend, 0, wxALL|wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 0);
    sizer_3_copy_copy_1->Add(300, 20, 0, 0, 0);
    sizer_6_copy->Add(sizer_3_copy_copy_1, 0, wxEXPAND, 5);
    sizer_11->Add(label_CalledPortNumber, 1, wxALL|wxEXPAND, 5);
    sizer_11->Add(m_edPACSCalledAEPort, 0, wxALL|wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 0);
    sizer_11->Add(300, 20, 0, 0, 0);
    sizer_6_copy->Add(sizer_11, 1, wxEXPAND, 0);
    sizer_12->Add(200, 20, 0, 0, 0);
    sizer_6_copy->Add(sizer_12, 1, wxEXPAND, 0);
    sizer_13->Add(200, 20, 0, 0, 0);
    sizer_13->Add(m_btnSaveConfig, 0, wxALIGN_CENTER_HORIZONTAL, 0);
    sizer_6_copy->Add(sizer_13, 1, wxEXPAND, 0);
    sizer_10->Add(sizer_6_copy, 1, wxEXPAND, 0);
    sizer_10->Add(20, 320, 0, 0, 0);
    notebook_pane_ConnectionParams->SetSizer(sizer_10);
    notebook->AddPage(notebook_pane_QueryRetrieve, wxT("QueryRetrieve"));
    notebook->AddPage(notebook_pane_SendToPacs, wxT("Send To Pacs"));
    notebook->AddPage(notebook_pane_ConnectionParams, wxT("Connection Params"));
    sizer_2->Add(notebook, 1, wxEXPAND, 0);
    SetSizer(sizer_2);
    // end wxGlade
}

